0x00000000: irmovl 0x00000400,%ESP               (0x00000400 -> %ESP)
0x00000006: irmovl 0x00000400,%EBP               (0x00000400 -> %EBP)
0x0000000C: jmp 0x00000024                       (0x00000024 -> PC)
0x00000024: irmovl 0x00000004,%EAX               (0x00000004 -> %EAX)
0x0000002A: pushl %EAX                           (%EAX -> 0x00000004, %ESP -> 0x00000400, 0x00000004 -> [0x000003FC], 0x000003FC -> %ESP)
0x0000002C: irmovl 0x00000014,%EDX               (0x00000014 -> %EDX)
0x00000032: pushl %EDX                           (%EDX -> 0x00000014, %ESP -> 0x000003FC, 0x00000014 -> [0x000003F8], 0x000003F8 -> %ESP)
0x00000034: call 0x0000003A                      (%ESP -> 0x000003F8, 0x00000039 -> [0x000003F4], 0x000003F4 -> %ESP, 0x0000003A -> PC)
0x0000003A: pushl %EBP                           (%EBP -> 0x00000400, %ESP -> 0x000003F4, 0x00000400 -> [0x000003F0], 0x000003F0 -> %ESP)
0x0000003C: rrmovl %ESP,%EBP                     (%ESP -> 0x000003F0, 0x000003F0 -> %EBP)
0x0000003E: pushl %EBX                           (%EBX -> 0x00000000, %ESP -> 0x000003F0, 0x00000000 -> [0x000003EC], 0x000003EC -> %ESP)
0x00000040: mrmovl 0x00000008(%EBP),%EBX         (%EBP -> 0x000003F0, [0x000003F8] -> 0x00000014, 0x00000014 -> %EBX)
0x00000046: mrmovl 0x0000000C(%EBP),%EAX         (%EBP -> 0x000003F0, [0x000003FC] -> 0x00000004, 0x00000004 -> %EAX)
0x0000004C: andl %EAX,%EAX                       (%EAX -> 0x00000004, %EAX -> 0x00000004, 0x00000004 -> %EAX, ... -> CC)
0x0000004E: jle 0x0000007B                       (ZF->0, SF->0, OF->0, no jump)
0x00000053: irmovl 0xFFFFFFFF,%EDX               (0xFFFFFFFF -> %EDX)
0x00000059: addl %EDX,%EAX                       (%EDX -> 0xFFFFFFFF, %EAX -> 0x00000004, 0x00000003 -> %EAX, ... -> CC)
0x0000005B: pushl %EAX                           (%EAX -> 0x00000003, %ESP -> 0x000003EC, 0x00000003 -> [0x000003E8], 0x000003E8 -> %ESP)
0x0000005D: irmovl 0x00000004,%EDX               (0x00000004 -> %EDX)
0x00000063: rrmovl %EBX,%EAX                     (%EBX -> 0x00000014, 0x00000014 -> %EAX)
0x00000065: addl %EDX,%EAX                       (%EDX -> 0x00000004, %EAX -> 0x00000014, 0x00000018 -> %EAX, ... -> CC)
0x00000067: pushl %EAX                           (%EAX -> 0x00000018, %ESP -> 0x000003E8, 0x00000018 -> [0x000003E4], 0x000003E4 -> %ESP)
0x00000069: call 0x0000003A                      (%ESP -> 0x000003E4, 0x0000006E -> [0x000003E0], 0x000003E0 -> %ESP, 0x0000003A -> PC)
0x0000003A: pushl %EBP                           (%EBP -> 0x000003F0, %ESP -> 0x000003E0, 0x000003F0 -> [0x000003DC], 0x000003DC -> %ESP)
0x0000003C: rrmovl %ESP,%EBP                     (%ESP -> 0x000003DC, 0x000003DC -> %EBP)
0x0000003E: pushl %EBX                           (%EBX -> 0x00000014, %ESP -> 0x000003DC, 0x00000014 -> [0x000003D8], 0x000003D8 -> %ESP)
0x00000040: mrmovl 0x00000008(%EBP),%EBX         (%EBP -> 0x000003DC, [0x000003E4] -> 0x00000018, 0x00000018 -> %EBX)
0x00000046: mrmovl 0x0000000C(%EBP),%EAX         (%EBP -> 0x000003DC, [0x000003E8] -> 0x00000003, 0x00000003 -> %EAX)
0x0000004C: andl %EAX,%EAX                       (%EAX -> 0x00000003, %EAX -> 0x00000003, 0x00000003 -> %EAX, ... -> CC)
0x0000004E: jle 0x0000007B                       (ZF->0, SF->0, OF->0, no jump)
0x00000053: irmovl 0xFFFFFFFF,%EDX               (0xFFFFFFFF -> %EDX)
0x00000059: addl %EDX,%EAX                       (%EDX -> 0xFFFFFFFF, %EAX -> 0x00000003, 0x00000002 -> %EAX, ... -> CC)
0x0000005B: pushl %EAX                           (%EAX -> 0x00000002, %ESP -> 0x000003D8, 0x00000002 -> [0x000003D4], 0x000003D4 -> %ESP)
0x0000005D: irmovl 0x00000004,%EDX               (0x00000004 -> %EDX)
0x00000063: rrmovl %EBX,%EAX                     (%EBX -> 0x00000018, 0x00000018 -> %EAX)
0x00000065: addl %EDX,%EAX                       (%EDX -> 0x00000004, %EAX -> 0x00000018, 0x0000001C -> %EAX, ... -> CC)
0x00000067: pushl %EAX                           (%EAX -> 0x0000001C, %ESP -> 0x000003D4, 0x0000001C -> [0x000003D0], 0x000003D0 -> %ESP)
0x00000069: call 0x0000003A                      (%ESP -> 0x000003D0, 0x0000006E -> [0x000003CC], 0x000003CC -> %ESP, 0x0000003A -> PC)
0x0000003A: pushl %EBP                           (%EBP -> 0x000003DC, %ESP -> 0x000003CC, 0x000003DC -> [0x000003C8], 0x000003C8 -> %ESP)
0x0000003C: rrmovl %ESP,%EBP                     (%ESP -> 0x000003C8, 0x000003C8 -> %EBP)
0x0000003E: pushl %EBX                           (%EBX -> 0x00000018, %ESP -> 0x000003C8, 0x00000018 -> [0x000003C4], 0x000003C4 -> %ESP)
0x00000040: mrmovl 0x00000008(%EBP),%EBX         (%EBP -> 0x000003C8, [0x000003D0] -> 0x0000001C, 0x0000001C -> %EBX)
0x00000046: mrmovl 0x0000000C(%EBP),%EAX         (%EBP -> 0x000003C8, [0x000003D4] -> 0x00000002, 0x00000002 -> %EAX)
0x0000004C: andl %EAX,%EAX                       (%EAX -> 0x00000002, %EAX -> 0x00000002, 0x00000002 -> %EAX, ... -> CC)
0x0000004E: jle 0x0000007B                       (ZF->0, SF->0, OF->0, no jump)
0x00000053: irmovl 0xFFFFFFFF,%EDX               (0xFFFFFFFF -> %EDX)
0x00000059: addl %EDX,%EAX                       (%EDX -> 0xFFFFFFFF, %EAX -> 0x00000002, 0x00000001 -> %EAX, ... -> CC)
0x0000005B: pushl %EAX                           (%EAX -> 0x00000001, %ESP -> 0x000003C4, 0x00000001 -> [0x000003C0], 0x000003C0 -> %ESP)
0x0000005D: irmovl 0x00000004,%EDX               (0x00000004 -> %EDX)
0x00000063: rrmovl %EBX,%EAX                     (%EBX -> 0x0000001C, 0x0000001C -> %EAX)
0x00000065: addl %EDX,%EAX                       (%EDX -> 0x00000004, %EAX -> 0x0000001C, 0x00000020 -> %EAX, ... -> CC)
0x00000067: pushl %EAX                           (%EAX -> 0x00000020, %ESP -> 0x000003C0, 0x00000020 -> [0x000003BC], 0x000003BC -> %ESP)
0x00000069: call 0x0000003A                      (%ESP -> 0x000003BC, 0x0000006E -> [0x000003B8], 0x000003B8 -> %ESP, 0x0000003A -> PC)
0x0000003A: pushl %EBP                           (%EBP -> 0x000003C8, %ESP -> 0x000003B8, 0x000003C8 -> [0x000003B4], 0x000003B4 -> %ESP)
0x0000003C: rrmovl %ESP,%EBP                     (%ESP -> 0x000003B4, 0x000003B4 -> %EBP)
0x0000003E: pushl %EBX                           (%EBX -> 0x0000001C, %ESP -> 0x000003B4, 0x0000001C -> [0x000003B0], 0x000003B0 -> %ESP)
0x00000040: mrmovl 0x00000008(%EBP),%EBX         (%EBP -> 0x000003B4, [0x000003BC] -> 0x00000020, 0x00000020 -> %EBX)
0x00000046: mrmovl 0x0000000C(%EBP),%EAX         (%EBP -> 0x000003B4, [0x000003C0] -> 0x00000001, 0x00000001 -> %EAX)
0x0000004C: andl %EAX,%EAX                       (%EAX -> 0x00000001, %EAX -> 0x00000001, 0x00000001 -> %EAX, ... -> CC)
0x0000004E: jle 0x0000007B                       (ZF->0, SF->0, OF->0, no jump)
0x00000053: irmovl 0xFFFFFFFF,%EDX               (0xFFFFFFFF -> %EDX)
0x00000059: addl %EDX,%EAX                       (%EDX -> 0xFFFFFFFF, %EAX -> 0x00000001, 0x00000000 -> %EAX, Z.. -> CC)
0x0000005B: pushl %EAX                           (%EAX -> 0x00000000, %ESP -> 0x000003B0, 0x00000000 -> [0x000003AC], 0x000003AC -> %ESP)
0x0000005D: irmovl 0x00000004,%EDX               (0x00000004 -> %EDX)
0x00000063: rrmovl %EBX,%EAX                     (%EBX -> 0x00000020, 0x00000020 -> %EAX)
0x00000065: addl %EDX,%EAX                       (%EDX -> 0x00000004, %EAX -> 0x00000020, 0x00000024 -> %EAX, ... -> CC)
0x00000067: pushl %EAX                           (%EAX -> 0x00000024, %ESP -> 0x000003AC, 0x00000024 -> [0x000003A8], 0x000003A8 -> %ESP)
0x00000069: call 0x0000003A                      (%ESP -> 0x000003A8, 0x0000006E -> [0x000003A4], 0x000003A4 -> %ESP, 0x0000003A -> PC)
0x0000003A: pushl %EBP                           (%EBP -> 0x000003B4, %ESP -> 0x000003A4, 0x000003B4 -> [0x000003A0], 0x000003A0 -> %ESP)
0x0000003C: rrmovl %ESP,%EBP                     (%ESP -> 0x000003A0, 0x000003A0 -> %EBP)
0x0000003E: pushl %EBX                           (%EBX -> 0x00000020, %ESP -> 0x000003A0, 0x00000020 -> [0x0000039C], 0x0000039C -> %ESP)
0x00000040: mrmovl 0x00000008(%EBP),%EBX         (%EBP -> 0x000003A0, [0x000003A8] -> 0x00000024, 0x00000024 -> %EBX)
0x00000046: mrmovl 0x0000000C(%EBP),%EAX         (%EBP -> 0x000003A0, [0x000003AC] -> 0x00000000, 0x00000000 -> %EAX)
0x0000004C: andl %EAX,%EAX                       (%EAX -> 0x00000000, %EAX -> 0x00000000, 0x00000000 -> %EAX, Z.. -> CC)
0x0000004E: jle 0x0000007B                       (ZF->1, SF->0, OF->0, 0x0000007B -> PC)
0x0000007B: xorl %EAX,%EAX                       (%EAX -> 0x00000000, %EAX -> 0x00000000, 0x00000000 -> %EAX, Z.. -> CC)
0x0000007D: mrmovl 0xFFFFFFFC(%EBP),%EBX         (%EBP -> 0x000003A0, [0x0000039C] -> 0x00000020, 0x00000020 -> %EBX)
0x00000083: rrmovl %EBP,%ESP                     (%EBP -> 0x000003A0, 0x000003A0 -> %ESP)
0x00000085: popl %EBP                            (%ESP -> 0x000003A0, [0x000003A0] -> 0x000003B4, 0x000003A4 -> %ESP, 0x000003B4 -> %EBP)
0x00000087: ret                                  (%ESP -> 0x000003A4, [0x000003A4] -> 0x0000006E, 0x000003A8 -> %ESP, 0x0000006E -> PC)
0x0000006E: mrmovl 0x00000000(%EBX),%EDX         (%EBX -> 0x00000020, [0x00000020] -> 0x0000A000, 0x0000A000 -> %EDX)
0x00000074: addl %EDX,%EAX                       (%EDX -> 0x0000A000, %EAX -> 0x00000000, 0x0000A000 -> %EAX, ... -> CC)
0x00000076: jmp 0x0000007D                       (0x0000007D -> PC)
0x0000007D: mrmovl 0xFFFFFFFC(%EBP),%EBX         (%EBP -> 0x000003B4, [0x000003B0] -> 0x0000001C, 0x0000001C -> %EBX)
0x00000083: rrmovl %EBP,%ESP                     (%EBP -> 0x000003B4, 0x000003B4 -> %ESP)
0x00000085: popl %EBP                            (%ESP -> 0x000003B4, [0x000003B4] -> 0x000003C8, 0x000003B8 -> %ESP, 0x000003C8 -> %EBP)
0x00000087: ret                                  (%ESP -> 0x000003B8, [0x000003B8] -> 0x0000006E, 0x000003BC -> %ESP, 0x0000006E -> PC)
0x0000006E: mrmovl 0x00000000(%EBX),%EDX         (%EBX -> 0x0000001C, [0x0000001C] -> 0x00000B00, 0x00000B00 -> %EDX)
0x00000074: addl %EDX,%EAX                       (%EDX -> 0x00000B00, %EAX -> 0x0000A000, 0x0000AB00 -> %EAX, ... -> CC)
0x00000076: jmp 0x0000007D                       (0x0000007D -> PC)
0x0000007D: mrmovl 0xFFFFFFFC(%EBP),%EBX         (%EBP -> 0x000003C8, [0x000003C4] -> 0x00000018, 0x00000018 -> %EBX)
0x00000083: rrmovl %EBP,%ESP                     (%EBP -> 0x000003C8, 0x000003C8 -> %ESP)
0x00000085: popl %EBP                            (%ESP -> 0x000003C8, [0x000003C8] -> 0x000003DC, 0x000003CC -> %ESP, 0x000003DC -> %EBP)
0x00000087: ret                                  (%ESP -> 0x000003CC, [0x000003CC] -> 0x0000006E, 0x000003D0 -> %ESP, 0x0000006E -> PC)
0x0000006E: mrmovl 0x00000000(%EBX),%EDX         (%EBX -> 0x00000018, [0x00000018] -> 0x000000C0, 0x000000C0 -> %EDX)
0x00000074: addl %EDX,%EAX                       (%EDX -> 0x000000C0, %EAX -> 0x0000AB00, 0x0000ABC0 -> %EAX, ... -> CC)
0x00000076: jmp 0x0000007D                       (0x0000007D -> PC)
0x0000007D: mrmovl 0xFFFFFFFC(%EBP),%EBX         (%EBP -> 0x000003DC, [0x000003D8] -> 0x00000014, 0x00000014 -> %EBX)
0x00000083: rrmovl %EBP,%ESP                     (%EBP -> 0x000003DC, 0x000003DC -> %ESP)
0x00000085: popl %EBP                            (%ESP -> 0x000003DC, [0x000003DC] -> 0x000003F0, 0x000003E0 -> %ESP, 0x000003F0 -> %EBP)
0x00000087: ret                                  (%ESP -> 0x000003E0, [0x000003E0] -> 0x0000006E, 0x000003E4 -> %ESP, 0x0000006E -> PC)
0x0000006E: mrmovl 0x00000000(%EBX),%EDX         (%EBX -> 0x00000014, [0x00000014] -> 0x0000000D, 0x0000000D -> %EDX)
0x00000074: addl %EDX,%EAX                       (%EDX -> 0x0000000D, %EAX -> 0x0000ABC0, 0x0000ABCD -> %EAX, ... -> CC)
0x00000076: jmp 0x0000007D                       (0x0000007D -> PC)
0x0000007D: mrmovl 0xFFFFFFFC(%EBP),%EBX         (%EBP -> 0x000003F0, [0x000003EC] -> 0x00000000, 0x00000000 -> %EBX)
0x00000083: rrmovl %EBP,%ESP                     (%EBP -> 0x000003F0, 0x000003F0 -> %ESP)
0x00000085: popl %EBP                            (%ESP -> 0x000003F0, [0x000003F0] -> 0x00000400, 0x000003F4 -> %ESP, 0x00000400 -> %EBP)
0x00000087: ret                                  (%ESP -> 0x000003F4, [0x000003F4] -> 0x00000039, 0x000003F8 -> %ESP, 0x00000039 -> PC)
0x00000039: halt 
